{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\projects\\\\03\\\\scandiweb\\\\src\\\\App.js\";\nimport './App.css';\nimport React from 'react';\nimport { ApolloClient, ApolloProvider, InMemoryCache, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst title = \"tech\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000\",\n  cache: new InMemoryCache()\n});\nconst getProductsQuery = gql`\nquery($input:CategoryInput){\n  category(input:$input){\n  name\n    products{\n      id\n    }\n  }\n  }\n    `;\nclient.query({\n  query: getProductsQuery,\n  variables: {\n    input: {\n      \"title\": title\n    }\n  }\n}).then(res => console.log(res.data));\n\nclass App extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n      client: client,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"product__list\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"product__link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","ApolloClient","ApolloProvider","InMemoryCache","gql","title","client","uri","cache","getProductsQuery","query","variables","input","then","res","console","log","data","App","Component","render"],"sources":["E:/react/projects/03/scandiweb/src/App.js"],"sourcesContent":["import './App.css';\nimport React from 'react';\nimport { ApolloClient, ApolloProvider, InMemoryCache, gql } from \"@apollo/client\";\nconst title = \"tech\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000\",\n  cache: new InMemoryCache()\n})\nconst getProductsQuery = gql`\nquery($input:CategoryInput){\n  category(input:$input){\n  name\n    products{\n      id\n    }\n  }\n  }\n    `\nclient.query({\n  query: getProductsQuery,\n  variables: { input: { \"title\": title } }\n}).then(res => console.log(res.data))\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <div className=\"App\">\n          <ul className=\"product__list\">\n            <li className=\"product__link\"></li>\n          </ul>\n        </div>\n      </ApolloProvider>\n    )\n  };\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,EAAsDC,GAAtD,QAAiE,gBAAjE;;AACA,MAAMC,KAAK,GAAG,MAAd;AACA,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;EAC9BM,GAAG,EAAE,uBADyB;EAE9BC,KAAK,EAAE,IAAIL,aAAJ;AAFuB,CAAjB,CAAf;AAIA,MAAMM,gBAAgB,GAAGL,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KATA;AAUAE,MAAM,CAACI,KAAP,CAAa;EACXA,KAAK,EAAED,gBADI;EAEXE,SAAS,EAAE;IAAEC,KAAK,EAAE;MAAE,SAASP;IAAX;EAAT;AAFA,CAAb,EAGGQ,IAHH,CAGQC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,CAHf;;AAKA,MAAMC,GAAN,SAAkBlB,KAAK,CAACmB,SAAxB,CAAkC;EAChCC,MAAM,GAAG;IACP,oBACE,QAAC,cAAD;MAAgB,MAAM,EAAEd,MAAxB;MAAA,uBACE;QAAK,SAAS,EAAC,KAAf;QAAA,uBACE;UAAI,SAAS,EAAC,eAAd;UAAA,uBACE;YAAI,SAAS,EAAC;UAAd;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EASD;;AAX+B;;AAclC,eAAeY,GAAf"},"metadata":{},"sourceType":"module"}