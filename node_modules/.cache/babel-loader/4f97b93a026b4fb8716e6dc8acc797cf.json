{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\projects\\\\03\\\\scandiweb\\\\src\\\\Product.jsx\";\nimport React from 'react';\nimport { graphql } from '@apollo/client/react/hoc';\nimport gql from 'graphql-tag';\nimport NewProduct from './newProduct';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst title = \"tech\";\nconst getProductsQuery = gql`query($input:CategoryInput){\n    category(input:$input){\n    name\n      products{\n        id\n      }\n    }\n    }\n  `;\n\nclass Product extends React.Component {\n  render() {\n    if (this.props.data.loading) {\n      return \"loading\";\n    }\n\n    console.log(this.props);\n    let products = this.props.data.category.products.map(el => /*#__PURE__*/_jsxDEV(NewProduct, {\n      id: el.id\n    }, el.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"s\",\n      children: products\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default graphql(getProductsQuery, {\n  options: {\n    variables: {\n      input: {\n        \"title\": title\n      }\n    }\n  }\n})(Product);","map":{"version":3,"names":["React","graphql","gql","NewProduct","title","getProductsQuery","Product","Component","render","props","data","loading","console","log","products","category","map","el","id","options","variables","input"],"sources":["E:/react/projects/03/scandiweb/src/Product.jsx"],"sourcesContent":["import React from 'react';\r\nimport { graphql } from '@apollo/client/react/hoc';\r\nimport gql from 'graphql-tag';\r\nimport NewProduct from './newProduct';\r\nconst title = \"tech\";\r\nconst getProductsQuery = gql`query($input:CategoryInput){\r\n    category(input:$input){\r\n    name\r\n      products{\r\n        id\r\n      }\r\n    }\r\n    }\r\n  `;\r\n\r\nclass Product extends React.Component {\r\n    render() {\r\n        if (this.props.data.loading) {\r\n            return \"loading\"\r\n        }\r\n        console.log(this.props)\r\n        let products = this.props.data.category.products.map(el =>\r\n            <NewProduct id={el.id} key={el.id} />\r\n        );\r\n        return (\r\n            <ul className=\"s\">\r\n                {products}\r\n            </ul>\r\n        );\r\n    }\r\n};\r\n\r\nexport default graphql(getProductsQuery, { options: { variables: { input: { \"title\": title } } } })(Product);"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AACA,MAAMC,KAAK,GAAG,MAAd;AACA,MAAMC,gBAAgB,GAAGH,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GARA;;AAUA,MAAMI,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;EAClCC,MAAM,GAAG;IACL,IAAI,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,OAApB,EAA6B;MACzB,OAAO,SAAP;IACH;;IACDC,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;IACA,IAAIK,QAAQ,GAAG,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,QAAhB,CAAyBD,QAAzB,CAAkCE,GAAlC,CAAsCC,EAAE,iBACnD,QAAC,UAAD;MAAY,EAAE,EAAEA,EAAE,CAACC;IAAnB,GAA4BD,EAAE,CAACC,EAA/B;MAAA;MAAA;MAAA;IAAA,QADW,CAAf;IAGA,oBACI;MAAI,SAAS,EAAC,GAAd;MAAA,UACKJ;IADL;MAAA;MAAA;MAAA;IAAA,QADJ;EAKH;;AAdiC;;AAerC;AAED,eAAeb,OAAO,CAACI,gBAAD,EAAmB;EAAEc,OAAO,EAAE;IAAEC,SAAS,EAAE;MAAEC,KAAK,EAAE;QAAE,SAASjB;MAAX;IAAT;EAAb;AAAX,CAAnB,CAAP,CAAqFE,OAArF,CAAf"},"metadata":{},"sourceType":"module"}